#BlueJ class context
comment0.target=Observer
comment0.text=\r\n\ An\ interface\ representing\ any\ class\ whose\ objects\ get\ notified\ when\r\n\ the\ objects\ they\ are\ observing\ update\ themselves.\r\n\r\n\ @param\ <Subject>\ the\ type\ of\ object\ an\ implementor\ of\ this\ interface\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ is\ observing\r\n\ @param\ <ClientData>\ optional\ data\ the\ model\ can\ send\ to\ the\ observer\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (null\ if\ nothing)\r\n\r\n\ @author\ RIT\ CS\r\n
comment1.params=subject\ data
comment1.target=void\ update(java.lang.Object,\ java.lang.Object)
comment1.text=\r\n\ The\ observed\ subject\ calls\ this\ method\ on\ each\ observer\ that\ has\r\n\ previously\ registered\ with\ it.\ This\ version\ of\ the\ design\ pattern\r\n\ follows\ the\ "push\ model"\ in\ that\ the\ subject\ can\ provide\r\n\ ClientData\ to\ inform\ the\ observer\ about\ what\ exactly\ has\ happened.\r\n\ But\ this\ convention\ is\ not\ required.\ It\ may\ still\ be\ necessary\ for\r\n\ the\ observer\ to\ also\ query\ the\ subject\ to\ find\ out\ more\ about\ what\ has\r\n\ happened.\ If\ this\ is\ a\ simple\ signal\ with\ no\ data\ attached,\r\n\ or\ if\ it\ can\ safely\ be\ assumed\ that\ the\ observer\ already\ has\ a\r\n\ reference\ to\ the\ subject,\ even\ the\ subject\ parameter\ may\ be\ null.\r\n\ But\ as\ always\ this\ would\ have\ to\ be\ agreed\ to\ by\ designers\ of\ both\ sides.\r\n\r\n\ @param\ subject\ the\ object\ that\ wishes\ to\ inform\ this\ object\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ about\ something\ that\ has\ happened.\r\n\ @param\ data\ optional\ data\ the\ model\ can\ send\ to\ the\ observer\r\n\r\n\ @see\ <a\ href\="https\://sourcemaking.com/design_patterns/observer">the\r\n\ Observer\ design\ pattern</a>\r\n
numComments=2
