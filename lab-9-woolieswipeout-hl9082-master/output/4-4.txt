SIM: Woolie Wipeout has begun with 4 woolie/s and a maximum of 4 woolie/s on the course
KRAKEN: let the show begin!
KRAKEN: turning on course...
WOOLIE: Woolie_1(total=10, remaining=10, fallen=0, preserver=Optional.empty) enters line
WOOLIE: Woolie_4(total=10, remaining=10, fallen=0, preserver=Optional.empty) enters line
WOOLIE: Woolie_3(total=8, remaining=8, fallen=0, preserver=Optional.empty) enters line
WOOLIE: Woolie_2(total=4, remaining=4, fallen=0, preserver=Optional.empty) enters line
KRAKEN: OBSTACLE_COURSE: ObstacleCourse(maxOnCourse=4, numOnCourse=0, fallenWoolie=false, running=true, open=true, wooliesWaiting=4)
WOOLIE: Woolie_1(total=10, remaining=10, fallen=0, preserver=Optional.empty) enters course
KRAKEN: Woolie_1 gets Preserver(id=1, buoyancy=15)
WOOLIE: Woolie_1(total=10, remaining=10, fallen=0, preserver=Optional[Preserver(id=1, buoyancy=14)]) crossing course...
WOOLIE: Woolie_1(total=10, remaining=9, fallen=0, preserver=Optional[Preserver(id=1, buoyancy=13)]) crossing course...
WOOLIE: Woolie_1(total=10, remaining=8, fallen=0, preserver=Optional[Preserver(id=1, buoyancy=12)]) crossing course...
WOOLIE: Woolie_1(total=10, remaining=7, fallen=0, preserver=Optional[Preserver(id=1, buoyancy=11)]) crossing course...
WOOLIE: Woolie_1(total=10, remaining=6, fallen=0, preserver=Optional[Preserver(id=1, buoyancy=10)]) crossing course...
WOOLIE: Woolie_1(total=10, remaining=5, fallen=0, preserver=Optional[Preserver(id=1, buoyancy=9)]) crossing course...
WOOLIE: Woolie_1(total=10, remaining=4, fallen=0, preserver=Optional[Preserver(id=1, buoyancy=8)]) crossing course...
WOOLIE: Woolie_1(total=10, remaining=3, fallen=0, preserver=Optional[Preserver(id=1, buoyancy=7)]) crossing course...
WOOLIE: Woolie_1(total=10, remaining=2, fallen=0, preserver=Optional[Preserver(id=1, buoyancy=6)]) crossing course...
WOOLIE: Woolie_1(total=10, remaining=1, fallen=0, preserver=Optional[Preserver(id=1, buoyancy=5)]) crossing course...
WOOLIE: Woolie_1(total=10, remaining=0, fallen=0, preserver=Optional[Preserver(id=1, buoyancy=5)]) leaves course
WOOLIE: Woolie_4(total=10, remaining=10, fallen=0, preserver=Optional.empty) enters course
KRAKEN: Woolie_1 returns Preserver(id=1, buoyancy=5)
	WOOLIE:Woolie_1(total=10, remaining=0, fallen=0, preserver=Optional.empty) finishes course!
KRAKEN: Woolie_4 can't use Preserver(id=1, buoyancy=5)
KRAKEN: Woolie_4 gets Preserver(id=2, buoyancy=18)
WOOLIE: Woolie_4(total=10, remaining=10, fallen=0, preserver=Optional[Preserver(id=2, buoyancy=17)]) crossing course...
WOOLIE: Woolie_4(total=10, remaining=9, fallen=0, preserver=Optional[Preserver(id=2, buoyancy=16)]) crossing course...
WOOLIE: Woolie_4(total=10, remaining=8, fallen=0, preserver=Optional[Preserver(id=2, buoyancy=15)]) crossing course...
WOOLIE: Woolie_4(total=10, remaining=7, fallen=0, preserver=Optional[Preserver(id=2, buoyancy=14)]) crossing course...
WOOLIE: Woolie_4(total=10, remaining=6, fallen=0, preserver=Optional[Preserver(id=2, buoyancy=13)]) crossing course...
WOOLIE: Woolie_4(total=10, remaining=5, fallen=0, preserver=Optional[Preserver(id=2, buoyancy=12)]) crossing course...
WOOLIE: Woolie_4(total=10, remaining=4, fallen=0, preserver=Optional[Preserver(id=2, buoyancy=11)]) crossing course...
WOOLIE: Woolie_4(total=10, remaining=3, fallen=0, preserver=Optional[Preserver(id=2, buoyancy=10)]) crossing course...
WOOLIE: Woolie_4(total=10, remaining=2, fallen=0, preserver=Optional[Preserver(id=2, buoyancy=9)]) crossing course...
WOOLIE: Woolie_4(total=10, remaining=1, fallen=0, preserver=Optional[Preserver(id=2, buoyancy=8)]) crossing course...
WOOLIE: Woolie_4(total=10, remaining=0, fallen=0, preserver=Optional[Preserver(id=2, buoyancy=8)]) leaves course
KRAKEN: Woolie_4 returns Preserver(id=2, buoyancy=8)
WOOLIE: Woolie_3(total=8, remaining=8, fallen=0, preserver=Optional.empty) enters course
	WOOLIE:Woolie_4(total=10, remaining=0, fallen=0, preserver=Optional.empty) finishes course!
KRAKEN: Woolie_3 gets Preserver(id=2, buoyancy=8)
WOOLIE: Woolie_2(total=4, remaining=4, fallen=0, preserver=Optional.empty) enters course
WOOLIE: Woolie_3(total=8, remaining=8, fallen=0, preserver=Optional[Preserver(id=2, buoyancy=7)]) crossing course...
KRAKEN: Woolie_2 gets Preserver(id=1, buoyancy=5)
WOOLIE: Woolie_2(total=4, remaining=4, fallen=0, preserver=Optional[Preserver(id=1, buoyancy=4)]) crossing course...
WOOLIE: Woolie_3(total=8, remaining=7, fallen=0, preserver=Optional[Preserver(id=2, buoyancy=6)]) crossing course...
WOOLIE: Woolie_2(total=4, remaining=3, fallen=0, preserver=Optional[Preserver(id=1, buoyancy=3)]) crossing course...
WOOLIE: Woolie_2(total=4, remaining=2, fallen=0, preserver=Optional[Preserver(id=1, buoyancy=2)]) crossing course...
	WOOLIE: Woolie_3(total=8, remaining=6, fallen=0, preserver=Optional[Preserver(id=2, buoyancy=5)]) fell of the course!
WOOLIE: Woolie_3(total=8, remaining=6, fallen=1, preserver=Optional[Preserver(id=2, buoyancy=5)]) leaves course
KRAKEN: Woolie_3 returns Preserver(id=2, buoyancy=5)
WOOLIE: Woolie_3(total=8, remaining=6, fallen=1, preserver=Optional.empty) enters line
WOOLIE: Woolie_3(total=8, remaining=6, fallen=1, preserver=Optional.empty) enters course
KRAKEN: Woolie_3 can't use Preserver(id=2, buoyancy=5)
KRAKEN: Woolie_3 gets Preserver(id=3, buoyancy=10)
WOOLIE: Woolie_3(total=8, remaining=6, fallen=1, preserver=Optional[Preserver(id=3, buoyancy=9)]) crossing course...
KRAKEN: A Woolie has fallen!  Turning off course...
KRAKEN: OBSTACLE_COURSE: ObstacleCourse(maxOnCourse=4, numOnCourse=2, fallenWoolie=true, running=false, open=true, wooliesWaiting=0)
KRAKEN: A Woolie has fallen!  Waiting for Woolies to exit course...
KRAKEN: OBSTACLE_COURSE: ObstacleCourse(maxOnCourse=4, numOnCourse=2, fallenWoolie=true, running=false, open=true, wooliesWaiting=0)
KRAKEN: A Woolie has fallen!  Waiting for Woolies to exit course...
KRAKEN: OBSTACLE_COURSE: ObstacleCourse(maxOnCourse=4, numOnCourse=2, fallenWoolie=true, running=false, open=true, wooliesWaiting=0)
WOOLIE: Woolie_2(total=4, remaining=1, fallen=0, preserver=Optional[Preserver(id=1, buoyancy=2)]) leaves course
KRAKEN: Woolie_2 returns Preserver(id=1, buoyancy=2)
WOOLIE: Woolie_3(total=8, remaining=5, fallen=1, preserver=Optional[Preserver(id=3, buoyancy=9)]) leaves course
KRAKEN: Woolie_3 returns Preserver(id=3, buoyancy=9)
WOOLIE: Woolie_2(total=4, remaining=1, fallen=0, preserver=Optional.empty) enters line
WOOLIE: Woolie_3(total=8, remaining=5, fallen=1, preserver=Optional.empty) enters line
KRAKEN: All Woolies have exited course!  Restarting course...
WOOLIE: Woolie_2(total=4, remaining=1, fallen=0, preserver=Optional.empty) enters course
KRAKEN: Woolie_2 gets Preserver(id=3, buoyancy=9)
WOOLIE: Woolie_2(total=4, remaining=1, fallen=0, preserver=Optional[Preserver(id=3, buoyancy=8)]) crossing course...
WOOLIE: Woolie_3(total=8, remaining=5, fallen=1, preserver=Optional.empty) enters course
KRAKEN: Woolie_3 can't use Preserver(id=1, buoyancy=2)
KRAKEN: Woolie_3 gets Preserver(id=4, buoyancy=8)
WOOLIE: Woolie_3(total=8, remaining=5, fallen=1, preserver=Optional[Preserver(id=4, buoyancy=7)]) crossing course...
WOOLIE: Woolie_3(total=8, remaining=4, fallen=1, preserver=Optional[Preserver(id=4, buoyancy=6)]) crossing course...
WOOLIE: Woolie_2(total=4, remaining=0, fallen=0, preserver=Optional[Preserver(id=3, buoyancy=8)]) leaves course
KRAKEN: Woolie_2 returns Preserver(id=3, buoyancy=8)
	WOOLIE:Woolie_2(total=4, remaining=0, fallen=0, preserver=Optional.empty) finishes course!
	WOOLIE: Woolie_3(total=8, remaining=3, fallen=1, preserver=Optional[Preserver(id=4, buoyancy=5)]) fell of the course!
WOOLIE: Woolie_3(total=8, remaining=3, fallen=2, preserver=Optional[Preserver(id=4, buoyancy=5)]) leaves course
KRAKEN: Woolie_3 returns Preserver(id=4, buoyancy=5)
WOOLIE: Woolie_3(total=8, remaining=3, fallen=2, preserver=Optional.empty) enters line
WOOLIE: Woolie_3(total=8, remaining=3, fallen=2, preserver=Optional.empty) enters course
KRAKEN: Woolie_3 gets Preserver(id=4, buoyancy=5)
WOOLIE: Woolie_3(total=8, remaining=3, fallen=2, preserver=Optional[Preserver(id=4, buoyancy=4)]) crossing course...
KRAKEN: A Woolie has fallen!  Turning off course...
KRAKEN: OBSTACLE_COURSE: ObstacleCourse(maxOnCourse=4, numOnCourse=1, fallenWoolie=true, running=false, open=true, wooliesWaiting=0)
KRAKEN: A Woolie has fallen!  Waiting for Woolies to exit course...
KRAKEN: OBSTACLE_COURSE: ObstacleCourse(maxOnCourse=4, numOnCourse=1, fallenWoolie=true, running=false, open=true, wooliesWaiting=0)
KRAKEN: A Woolie has fallen!  Waiting for Woolies to exit course...
KRAKEN: OBSTACLE_COURSE: ObstacleCourse(maxOnCourse=4, numOnCourse=1, fallenWoolie=true, running=false, open=true, wooliesWaiting=0)
WOOLIE: Woolie_3(total=8, remaining=2, fallen=2, preserver=Optional[Preserver(id=4, buoyancy=4)]) leaves course
KRAKEN: Woolie_3 returns Preserver(id=4, buoyancy=4)
WOOLIE: Woolie_3(total=8, remaining=2, fallen=2, preserver=Optional.empty) enters line
KRAKEN: All Woolies have exited course!  Restarting course...
WOOLIE: Woolie_3(total=8, remaining=2, fallen=2, preserver=Optional.empty) enters course
KRAKEN: Woolie_3 gets Preserver(id=4, buoyancy=4)
WOOLIE: Woolie_3(total=8, remaining=2, fallen=2, preserver=Optional[Preserver(id=4, buoyancy=3)]) crossing course...
WOOLIE: Woolie_3(total=8, remaining=1, fallen=2, preserver=Optional[Preserver(id=4, buoyancy=2)]) crossing course...
WOOLIE: Woolie_3(total=8, remaining=0, fallen=2, preserver=Optional[Preserver(id=4, buoyancy=2)]) leaves course
KRAKEN: Woolie_3 returns Preserver(id=4, buoyancy=2)
	WOOLIE:Woolie_3(total=8, remaining=0, fallen=2, preserver=Optional.empty) finishes course!
KRAKEN: turning off course...
KRAKEN: OBSTACLE_COURSE: ObstacleCourse(maxOnCourse=4, numOnCourse=0, fallenWoolie=false, running=false, open=false, wooliesWaiting=0)
KRAKEN: that's all folks!
SIM: Woolie Wipeout has ended...
SIM: Woolie results:
	Woolie_1(total=10, remaining=0, fallen=0, preserver=Optional.empty)
	Woolie_2(total=4, remaining=0, fallen=0, preserver=Optional.empty)
	Woolie_3(total=8, remaining=0, fallen=2, preserver=Optional.empty)
	Woolie_4(total=10, remaining=0, fallen=0, preserver=Optional.empty)
SIM: Woolie/s who fell the most, 2 times:
	Woolie_3(total=8, remaining=0, fallen=2, preserver=Optional.empty)
SIM: Number of preservers dispensed: 4
SIM: Remaining preservers:
	Preserver(id=4, buoyancy=2)
	Preserver(id=3, buoyancy=8)
	Preserver(id=1, buoyancy=2)
	Preserver(id=2, buoyancy=5)
SIM: Destroyed preservers: