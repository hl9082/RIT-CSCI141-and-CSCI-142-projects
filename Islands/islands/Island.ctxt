#BlueJ class context
comment0.target=Island
comment0.text=\r\n\ Represents\ an\ island\ in\ the\ game\ Islands.\ An\ island\ is\ a\ \r\n\ collection\ of\ connected\ cells\ claimed\ by\ the\ same\ player.\ \r\n\ The\ cells\ are\ connected\ \r\n\ in\ the\ four\ principal\ directions\:\ North,\ South,\ East\ and\ West.\r\n\r\n\ @author\ RIT\ CS\r\n\ @author\ HUY\ LE\r\n
comment1.params=
comment1.target=Island()
comment1.text=\r\n\ Create\ an\ empty\ island\ with\ no\ cells.\r\n\ \r\n
comment2.params=cell
comment2.target=Island(Cell)
comment2.text=\r\n\ Create\ an\ island\ with\ the\ given\ cell.\r\n\ @param\ cell\ -\ the\ island's\ cell.\r\n
comment3.params=island
comment3.target=void\ merge(Island)
comment3.text=\r\n\ Merge\ the\ given\ Island\ object\ into\ this\ Island.\ \r\n\ Add\ the\ cells\ from\ the\ given\ Island\ into\ this\ Island.\r\n\ @param\ island\ -\ the\ island\ to\ merge\ with\r\n\ \r\n
comment4.params=
comment4.target=int\ size()
comment4.text=\r\n\ Get\ the\ number\ of\ cells\ on\ this\ Island.\r\n\ @return\ number\ of\ cells\ that\ comprises\ this\ Island.\r\n
comment5.params=coordinates
comment5.target=boolean\ hasCell(Coordinates)
comment5.text=\r\n\ Does\ the\ island\ have\ this\ cell?\r\n\ @param\ coordinates\ -\ the\ cell's\ coordinates.\r\n\ @return\ whether\ this\ Island\ has\ a\ cell\ with\ the\ given\r\n\ coordinates.\r\n
comment6.params=cell
comment6.target=void\ addCell(Cell)
comment6.text=\r\n\ Add\ the\ given\ cell\ into\ this\ Island.\r\n\ @param\ cell\ -\ the\ cell\ to\ add.\r\n
comment7.params=rows\ cols\ direction
comment7.target=boolean\ touchesBoardBoundaries(int,\ int,\ Direction)
comment7.text=\r\n\ Check\ whether\ this\ Island\ touches\ the\ boundaries\ of\ the\ board\ in\ the\ given\ direction.\ \r\n\ This\ method\ return\ true\ if\ an\ island\ of\ multiple\ cells\ has\ two\ cells\ at\ both\ \r\n\ boundaries\ of\ the\ board\ in\ that\ particular\ direction.\r\n\ If\ an\ island\ has\ only\ one\ cell,\ that\ cell\ must\ touch\ \r\n\ both\ boundaries\ at\ the\ same\ time.\r\n\ @param\ rows\ -\ the\ number\ of\ rows\ on\ the\ game's\ board\ (board's\ row\ dimension)\r\n\ @param\ cols\ -\ the\ number\ of\ columns\ on\ the\ game's\ board\ (board's\ column\ dimension)\r\n\ @param\ direction\ -\ the\ direction\r\n\ @return\ whether\ the\ island\ has\ cells\ in\ the\ board's\ boundaries\ coordinates\ \r\n\ for\ the\ given\ direction.\r\n
comment8.params=other
comment8.target=boolean\ equals(java.lang.Object)
comment8.text=\r\n\ Two\ islands\ are\ equals\ if\ they\ have\ the\ same\ collection\ of\ cells.\r\n\ @param\ other\ -\ the\ other\ island\ to\ compare\ with.\r\n\ @return\ -\ whether\ they\ are\ equals\ or\ not.\r\n
comment9.params=
comment9.target=java.lang.String\ toString()
comment9.text=\r\n\ Returns\ a\ string\ with\ the\ Island's\ size\ followed\ by\ the\ coordinates\ of\ every\ cell\ that\ conforms\ the\ island,\ e.g.\:\r\n\ \ \ \ \ \ \ Island{size\:3}\r\n\ \ \ \ \ \ \ (0,0)(0,1)(1,0)\r\n\ This\ string\ will\ contain\ a\ new\ line\ and\ a\ tabulation\ only\ if\ \r\n\ the\ island\ has\ cells.\ To\ print\ a\ tabulation\ in\ Java,\ use\ "\\t".\r\n\ @Override\ toString\ in\ class\ Object.\r\n\ @return\ the\ island's\ string\ representation\r\n
numComments=10
