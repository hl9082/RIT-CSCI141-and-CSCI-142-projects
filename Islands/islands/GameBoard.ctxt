#BlueJ class context
comment0.target=GameBoard
comment1.params=rows\ columns
comment1.target=GameBoard(int,\ int)
comment1.text=\r\n\ Creates\ the\ game\ board.\ The\ red\ player\r\n\ goes\ first.\r\n\ @param\ rows\ -\ number\ of\ rows.\r\n\ @param\ columns\ -\ number\ of\ columns.\r\n
comment2.params=
comment2.target=Player\ whoseTurn()
comment2.text=\r\n\ Whose\ turn\ is\ it\ anyway?\r\n\ @return\ the\ player\ who\ has\ the\ current\ turn\r\n\ (the\ current\ player)\r\n
comment3.params=row\ col
comment3.target=void\ claimCell(int,\ int)
comment3.text=\r\n\ Make\ a\ move\ in\ the\ game\ given\ a\ valid\ cell\ \r\n\ to\ claim.\ A\ move\ is\ made\ by\ \r\n\ specifying\ an\ unclaimed\ cell\ \r\n\ to\ be\ owned\ by\ the\ current\ player.\ \r\n\ Once\ the\ cell\ is\ claimed,\ \r\n\ the\ number\ of\ moves\ in\ the\ game\ \r\n\ increases\ by\ one\ and\ the\ next\ turn\ is\ \r\n\ swapped\ to\ the\ other\ player.\r\n\ @param\ row\ -\ the\ cell's\ row.\r\n\ @param\ col\ -\ the\ cell's\ column.\r\n\ @rit.pre\ -\ the\ coordinates\ for\ the\ cell\ \r\n\ have\ already\ been\ checked\ for\ validity\ \r\n\ and\ can\ be\ claimed\r\n
comment4.params=
comment4.target=void\ nextTurn()
comment4.text=\r\n\ Swap\ the\ turn\ to\ the\ other\ player\r\n
comment5.params=
comment5.target=boolean\ hasUnclaimedCell()
comment5.text=\r\n\ Are\ there\ any\ cell\ with\ no\ owner?\r\n\ @return\ whether\ there\ are\ any\ unclaimed\ cell.\r\n
comment6.params=row\ col
comment6.target=boolean\ isCellValid(int,\ int)
comment6.text=\r\n\ Are\ the\ coordinates\ for\ this\ cell\ valid\ or\ not?\ \r\n\ To\ be\ valid\ it\ must\ be\ a\ cell\ that\ exists\ in\ the\ board\ and\ \r\n\ is\ unclaimed.\r\n\ @param\ row\ -\ the\ cell's\ row.\r\n\ @param\ col\ -\ the\ cell's\ column.\r\n\ @return\ -\ whether\ the\ cell\ is\ valid\ or\ not.\r\n
comment7.params=
comment7.target=boolean\ gameOver()
comment7.text=\r\n\ Is\ the\ game\ over?\ This\ happens\ when\ there\ are\ no\ more\ cells\ to\ claim,\ a\ red\ player's\ island\ \r\n\ touches\ the\ board\ from\ \r\n\ top\ to\ bottom\ or\ a\ blue's\ player\ island\ touches\ the\ board\ from\ left\ to\ right.\r\n\ @return\ whether\ the\ game\ is\ over.\r\n
comment8.params=playerRole
comment8.target=void\ displayIslands(PlayerRole)
comment8.text=\r\n\ Display\ in\ the\ standard\ output\ the\ player's\ information\ followed\ by\ \r\n\ each\ of\ the\ islands\ owned\ by\ the\ player.\r\n\ Player\:\ RED,\ islands\:\ 2\r\n\ Island{size\:2}\r\n\ (0,1)(0,0)\r\n\ Island{size\:3}\r\n\ (2,2)(1,2)(2,1)\r\n\ @param\ playerRole\ -\ the\ player's\ role\r\n
comment9.params=
comment9.target=java.lang.String\ toString()
comment9.text=\r\n\ Return\ a\ string\ representation\ of\ the\ board,\ e.g.\ a\ 3x3\ board\:\r\n\ <br><pre>\r\n\ \ \ \ \ \ \ 0\ \ 1\ \ 2\r\n\ \ \ \ \ _________\r\n\ \ 0\ |\ \ *\ \ \ \ \ -\r\n\ \ 1\ |\ \ \ \ \ -\ \ *\r\n\ \ 2\ |\ \ -\ \ *\r\n\r\n\ Player\:\ RED,\ islands\:\ \#,\ Player\:\ BLUE,\ islands\:\ \#\r\n\ Moves\:\ \#,\ Turn\:\ {Player}\r\n\ </pre>\r\n\r\n\ If\ the\ game\ is\ over,\ it\ will\ print\ who\ is\ the\ winner\ or\ whether\ it\ is\ a\ tie,\ e.g\:\r\n<br><pre>\r\n\ \ \ \ \ \ 0\ \ 1\ \ 2\r\n\ \ \ \ \ _________\r\n\ \ 0\ |\ \ *\ \ *\ \ *\r\n\ \ 1\ |\ \ -\ \ -\ \ -\r\n\ \ 2\ |\ \ -\ \ *\r\n\r\n\ Player\:\ RED,\ islands\:\ \#,\ Player\:\ BLUE,\ islands\:\ \#\r\n\r\n\ {Player}\ wins\ \#\ to\ \#\!\r\n\ </pre>\r\n\r\n\ @return\ the\ string\ representation\ of\ the\ game's\ status\r\n\ @see\ Player\#toString()\r\n
numComments=10
