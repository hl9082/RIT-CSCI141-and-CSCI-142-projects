#BlueJ class context
comment0.target=HitoriConfig
comment0.text=\r\n\ CSCI-142\ Computer\ Science\ 2\ Recitation\ Pair\ Exercise\r\n\ 13-DFS_Backtracking\r\n\ Hitori\r\n\r\n\ A\ class\ to\ represents\ a\ single\ instance\ of\ a\ Hitori\ puzzle.\r\n\r\n\ This\ is\ the\ student\ version.\r\n\r\n\ @author\ RITCS\r\n
comment1.params=filename
comment1.target=HitoriConfig(java.lang.String)
comment1.text=\r\n\ Construct\ a\ new\ configuration.\ \ This\ is\ called\ by\ the\ main\ program\ to\r\n\ read\ in\ the\ initial\ configuration\ from\ a\ file.\r\n\r\n\ @param\ filename\ the\ name\ of\ the\ file\ with\ the\ numbers\r\n\ @throws\ FileNotFoundException\ if\ the\ file\ cannot\ be\ found\r\n
comment10.params=
comment10.target=boolean\ isGoal()
comment10.text=\r\n\ Check\ if\ a\ configuration\ is\ a\ goal\ or\ not.\ \ Because\ of\ all\ the\ work\r\n\ done\ in\ isValid\ this\ is\ trivial.\ \ We\ just\ make\ sure\ the\ cursor\ is\ at\r\n\ the\ last\ cell\ in\ the\ grid.\ \ Since\ we\ know\ the\ config\ is\ valid\ it\r\n\ is\ a\ solution.\r\n\r\n\ @return\ whether\ this\ config\ is\ a\ goal\ config\ or\ not\r\n
comment11.params=
comment11.target=java.lang.String\ toString()
comment11.text=\r\n\ Return\ a\ string\ representation\ of\ the\ grid\ with\ either\ the\ numbered\r\n\ cells\ number,\ or\ an\ X\ for\ a\ black\ cell.\r\n\r\n\ @return\ a\ string\ of\ the\ board\r\n
comment2.params=other\ black
comment2.target=HitoriConfig(HitoriConfig,\ boolean)
comment2.text=\r\n\ Make\ a\ copy\ of\ a\ current\ configuration.\ \ This\ routine\ is\ called\ when\r\n\ generating\ successors\ by\ copying\ the\ previous\ valid\ config\ and\r\n\ generating\ new\ ones\ where\ the\ cursor\ is\ advanced\ to\ the\ next\r\n\ cell\ and\ either\ the\ cell\ retains\ its\ number,\ or\ it\ is\ blacked\ out.\r\n\r\n\ @param\ other\ the\ config\ to\ copy\r\n\ @param\ black\ should\ we\ populate\ the\ cursor\ cell\ black\ or\ leave\ it?\r\n
comment3.params=
comment3.target=java.util.Collection\ getSuccessors()
comment3.text=\r\n\ There\ are\ two\ successors\ that\ can\ come\ from\ a\ valid\ config.\ \ They\r\n\ are\ generated\ here\ by\ using\ the\ copy\ constructor.\ \ At\ the\ cursor\r\n\ cell\ we\ either\ leave\ the\ number,\ or\ replace\ it\ with\ black.\r\n\r\n\ @return\ the\ successors\r\n
comment4.params=cell\ visited
comment4.target=int\ countNumberedCellsDFS(javafx.util.Pair,\ java.util.Set)
comment4.text=\r\n\ A\ helper\ function\ for\ recursively\ counting\ the\ number\ of\ numbered\ cells.\r\n\r\n\ @param\ cell\ the\ (row,\ col)\ to\ check\r\n\ @param\ visited\ the\ already\ visited\ cells\ (to\ prevent\ cycle\ loop)\r\n\ @return\ the\ total\ number\ cells\ visited\ with\ the\ search\r\n
comment5.params=
comment5.target=javafx.util.Pair\ findFirstNumberedCell()
comment5.text=\r\n\ Locate\ the\ first\ numbered\ cell\ in\ the\ grid\ starting\ at\ (0,0).\r\n\r\n\ @return\ the\ first\ cell\ with\ a\ number\ (not\ black)\r\n
comment6.params=
comment6.target=boolean\ noDuplicateNumbers()
comment6.text=\r\n\ A\ function\ that\ checks\ there\ are\ no\ duplicate\ numbers\ (exclusing\ black)\r\n\ in\ a\ row\ or\ column.\r\n\r\n\ @return\ true\ if\ there\ are\ no\ duplicates,\ false\ otherwise\r\n
comment7.params=
comment7.target=boolean\ noAdjacentBlackCell()
comment7.text=\r\n\ Check\ to\ make\ sure\ if\ a\ black\ cell\ was\ just\ placed\ that\ it\ is\r\n\ not\ adjacent\ (N,S,E,W)\ to\ an\ existing\ black\ cell.\r\n\r\n\ @return\ true\ if\ there\ are\ no\ adjacent\ black\ cells,\ false\ otherwise\r\n
comment8.params=
comment8.target=boolean\ allNumbersConnected()
comment8.text=\r\n\ Check\ that\ all\ numbered\ cells\ are\ connected\ to\ each\ other\ and\ are\r\n\ reachable.\r\n\r\n\ @return\ true\ if\ all\ numbered\ cells\ are\ connected,\ otherwise\ false\r\n
comment9.params=
comment9.target=boolean\ isValid()
comment9.text=\r\n\ There\ are\ three\ conditions\ that\ must\ be\ checked\ to\ determine\ if\ a\ successor\r\n\ config\ is\ valid\:\r\n\r\n\ 1.\ There\ are\ no\ duplicate\ numbes\ in\ a\ row\ or\ column\ (excluding\ black\ cells).\r\n\ 2.\ There\ are\ no\ adjacent\ black\ cells\ (N,S,E,W).\r\n\ 3.\ All\ the\ numbered\ cells\ are\ connected\ and\ reachable.\r\n\r\n\ @return\ whether\ this\ new\ config\ is\ valid\ or\ not\r\n
numComments=12
