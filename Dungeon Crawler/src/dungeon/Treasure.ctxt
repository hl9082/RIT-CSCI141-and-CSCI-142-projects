#BlueJ class context
comment0.target=Treasure
comment0.text=\r\n\ A\ single\ treasure\ that\ exists\ in\ the\ dungeon.\r\n\r\n\ @author\ RIT\ CS\r\n
comment1.params=name\ location
comment1.target=Treasure(java.lang.String,\ dungeon.Coordinates)
comment1.text=\r\n\ Create\ a\ new\ treasure\ that\ has\ not\ been\ collected\ yet.\r\n\r\n\ @param\ name\ treasure\ name\r\n\ @param\ location\ treasure\ location\r\n
comment2.params=
comment2.target=java.lang.String\ getName()
comment2.text=\r\n\ Get\ the\ treasure\ name.\r\n\r\n\ @return\ name\r\n
comment3.params=
comment3.target=dungeon.Coordinates\ getLocation()
comment3.text=\r\n\ Get\ the\ treasure\ location.\r\n\r\n\ @return\ location\r\n
comment4.params=
comment4.target=void\ collect()
comment4.text=\r\n\ Mark\ the\ treasure\ as\ being\ collected.\r\n
comment5.params=
comment5.target=boolean\ isCollected()
comment5.text=\r\n\ Tell\ whether\ the\ treasure\ has\ been\ collected\ or\ not.\r\n\r\n\ @return\ collected\ or\ not\r\n
comment6.params=o
comment6.target=boolean\ equals(java.lang.Object)
comment6.text=\r\n\ Two\ treasures\ are\ equal\ iff\ they\ have\ the\ same\ name,\ location\r\n\ and\ collected\ status.\r\n\r\n\ @param\ o\ the\ other\ object\r\n\ @return\ whether\ they\ are\ equal\ or\ not\r\n
comment7.params=
comment7.target=int\ hashCode()
comment7.text=\r\n\ Uses\ all\ the\ fields\ of\ the\ treasure\ and\ hash\ them\ together.\r\n\r\n\ @return\ the\ hash\ code\r\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\r\n\ Returns\ a\ string\ with\ the\ treasure\ name\ and\ location,\ e.g.\ "A(0,0)".\r\n\r\n\ @return\ the\ string\r\n
comment9.params=other
comment9.target=int\ compareTo(dungeon.Treasure)
comment9.text=\r\n\ Treasures\ naturally\ compare\ themselves\ alphabetically\ by\ name.\r\n\r\n\ @param\ other\ the\ object\ to\ be\ compared.\r\n\ @return\ a\ value\ less\ than,\ equal,\ or\ greater\ to\ zero\ when\ comparing\r\n\ this\ treasure\ to\ the\ other\ treasure\r\n
numComments=10
